import random
from replit import clear
from art import logo
#Create a deal_card() function that uses the List below to *return* a random card.
def deal_card():
    cards = [11, 2, 3, 4, 5, 6, 7, 8, 9, 10, 10, 10, 10]
    card = random.choice(cards)
    return card 
#Create a function called calculate_score() that takes a List of cards as input and returns the score. 
#Inside calculate_score() check for a blackjack (a hand with only 2 cards: ace + 10) and return 0 instead of the actual score. 0 will represent a blackjack in our game.
#Inside calculate_score() check for an 11 (ace). If the score is already over 21, remove the 11 and replace it with a 1.
def calculate_score(cards):
    """this gives a card and computes the sum of it"""
    if sum(cards) == 21 and len(cards) == 2: #here, the sum is 21, and the range/ lenght is 2
        return 0
    return sum(cards)
    if 11 in cards and calculate_score > 21:
        cards.remove(11) #we remove the number 11 from the deck and leave the place empty
        cards.append(1)  #we populate the empty space of 11 with the number 1 instead
    return sum(cards)   
#Create a function called compare() and pass in the user_score and computer_score. If the computer and user both have the same score, then it's a draw. If the computer has a blackjack (0), then the user loses. If the user has a blackjack (0), then the user wins. If the user_score is over 21, then the user loses. If the computer_score is over 21, then the computer loses. If none of the above, then the player with the highest score wins.
def compare (user_score, computer_score):
    if user_score > 21 and computer_score > 21:
        return "\nYou went over, you lose!"
    elif user_score == computer_score: #if work top to bottom, and exit once return is given
        return "\nDraw!"
    elif computer_score == 0:
        return "\nyou lose, your opponent has blackjack!"
    elif user_score == 0:
        return "\nyou win with blackjack!"
    elif user_score > 21:
        return "\nyou went over 21, you lose!"
    elif computer_score >21:
        return "\nOpponent went over, you win!"            
    elif user_score > computer_score:
        return "\nCongrats, you win this time!"
    else:
        return "\nyou lose!"  
#Deal the user and computer 2 cards each using deal_card() and append().
def play_game():

  print(logo)

  #Deal the user and computer 2 cards each using deal_card()
  user_cards = []
  computer_cards = []
  is_game_over = False

  for _ in range(2):
    user_cards.append(deal_card())
    computer_cards.append(deal_card())

  #The score will need to be rechecked with every new card drawn and the checks in Hint 9 need to be repeated until the game ends.

  while not is_game_over:
    #Call calculate_score(). If the computer or the user has a blackjack (0) or if the user's score is over 21, then the game ends.
    user_score = calculate_score(user_cards)
    computer_score = calculate_score(computer_cards)
    print(f"   Your cards: {user_cards}, current score: {user_score}")
    print(f"   Computer's first card: {computer_cards[0]}")

    if user_score == 0 or computer_score == 0 or user_score > 21:
      is_game_over = True
    else:
      #If the game has not ended, ask the user if they want to draw another card. If yes, then use the deal_card() function to add another card to the user_cards List. If no, then the game has ended.
      user_should_deal = input("Type 'y' to get another card, type 'n' to pass: ")
      if user_should_deal == "y":
        user_cards.append(deal_card())
      else:
        is_game_over = True

  #Once the user is done, it's time to let the computer play. The computer should keep drawing cards as long as it has a score less than 17.
  while computer_score != 0 and computer_score < 17:
    computer_cards.append(deal_card())
    computer_score = calculate_score(computer_cards)

  print(f"   Your final hand: {user_cards}, final score: {user_score}")
  print(f"   Computer's final hand: {computer_cards}, final score: {computer_score}")
  print(compare(user_score, computer_score))

#Ask the user if they want to restart the game. If they answer yes, clear the console and start a new game of blackjack and show the logo from art.py.
while input("Do you want to play a game of Blackjack? Type 'y' or 'n': ") == "y":
  clear()
  play_game()
